#!/bin/bash

## Created by Steven Cameron on 8/23/2016 ##
## Updated by Steven Cameron on 3/08/2017 ##
## Added -t flag "because oh my god shut up, Clay" on 8/15/2017 ##

#Load env
. ~/.dshrc

if [[ -z $1 ]]
then
        echo -e "${CYAN}DCP Help - Use ${LIME}dcp -o ${GREEN}groups ${END}or ${LIME}dcp -g ${GREEN}groups ${CYAN}to see all configured and OS and System groups"
        echo -e ""
        echo -e "${LYELLOW}The hostlist is located at ${LIME}${HOSTLIST}${END}"
        echo -e ""
        echo -e "${LRED}Any groups displayed in this output are simply examples and could be outdated."
        echo -e ""
        echo -e "${LYELLOW}$0${END} -o ${LYELLOW}aix${END}|${LYELLOW}linux${END} -g ${LYELLOW}prod${END}|${LYELLOW}cert${END}|${LYELLOW}trec${END} -s \"${CYAN}/source/file/path${END}\" -d${LRED}|${END}-t \"${LIME}/dest/file/path${END}\""
        echo -e "${LCYAN}OR"
        echo -e "${LYELLOW}$0${END} -f ${LYELLOW}/path/to/host_list${END} -s \"${CYAN}/source/file/path${END}\" -d${LRED}|${END}-t \"${LIME}/dest/file/path${END}\""
        echo -e ""
        exit 1
fi

while [[ "$#" -gt 0 ]]
do
case "$1" in
        -o) OS="$2"; shift 2;;
        -g) GROUP="$2"; shift 2;;
        -s) SRC="$2"; shift 2;;
        -d) DEST="$2"; shift 2;;
        -t) DEST="$2"; shift 2;;

        --os=*) os="{1#*=}"; shift 1;;
        --group=*) group="{1#*=}"; shift 1;;
        --source=*) source="{1#*=}"; shift 1;;
        --dest=*) dest="{1#*=}"; shift 1;;
        --targ=*) dest="{1#*=}"; shift 1;;
        --os|--group|--source|--dest|--targ) echo "$1 requires an argument" >&2; exit 1;;

        -*) echo "unknown option: $1" >&2; exit 1;;
        *) die "$1"; shift 1 ;;
esac
done

if [[ $GROUP = "groups" ]]
then
awk '$4 !~ /,off,/ && $1 !~ /#/ {print $3,$4}' ${HOSTLIST} | sed 's!,!!' | sed 's!,! !g' | awk '{ for (i=1; i<=NF; i++) print $i }' | sort -u
fi

if [[ $OS = "groups" ]]
then
awk '$4 !~ /,off,/ && $1 !~ /#/ {print $3,$4}' ${HOSTLIST} | sed 's!,!!' | sed 's!,! !g' | awk '{ for (i=1; i<=NF; i++) print $i }' | sort -u
fi

if [[ -z $OS ]]
then
        NODELOOP=$(awk '$4 = /,'${GROUP}',/ && $4 !~ /,off,/ && $1 !~ /#/ {print $1}' ${HOSTLIST})
fi

if [[ -z $GROUP ]]
then
        NODELOOP=$(awk '$3 = /,'${OS}',/ && $4 !~ /,off,/ && $1 !~ /#/ {print $1}' ${HOSTLIST})
fi

if [[ -n $OS && -n $GROUP ]]
then
        NODELOOP=$(awk '$3 = /,'${OS}',/ && $4 = /,'${GROUP}',/ && $4 !~ /,off,/ && $1 !~ /#/ {print $1}' ${HOSTLIST})
fi

if [[ -z $SRC && -z $DEST ]]
then
for NODES in $NODELOOP
do
        export ${NODES}
        echo -e "${NODES}"
done
echo -e "${LIME}# No ${LRED}source${LIME} and/or ${LRED}destination${LIME} specified. Nodes in group listed instead. #${END}"
exit 1
fi

if [[ -z $SRC ]]
then
for NODES in $NODELOOP
do
        export ${NODES}
        echo -e "${NODES}"
done
echo -e "${LIME}# No source/destination specified. Nodes in group listed instead. ${LRED}See below for more details: ${LIME}#${END}"
fi

if [[ -z $DEST ]]
then
for NODES in $NODELOOP
do
        export ${NODES}
        echo -e "${NODES}"
done
echo -e "${LIME}# No source/destination specified. Nodes in group listed instead. ${LRED}See below for more details: ${LIME}#${END}"
fi

if [[ -z $SRC ]]
then
        echo -e "${LRED}You need to enter a source file path${END}."
        exit 1
fi

if [[ -z $DEST ]]
then
        echo -e "${LRED}You need to enter a destination file path${END}."
        exit 1
fi

echo ""

for NODES in $NODELOOP
do
export $NODES
if [[ $OS = "vio" ]]
then
        echo -e "$(/usr/bin/scp -pr -o ConnectTimeout=3 $SRC padmin@$NODES:$DEST)         :${LIME}$NODES${END}"
else
        echo -e "$(/usr/bin/scp -pr -o ConnectTimeout=3 $SRC $NODES:$DEST)         :${LIME}$NODES${END}"
fi
done 2>/dev/null
