#!/bin/bash

## Created by Steven Cameron on 8/22/2016 ##
## Updated by Steven Cameron on 3/09/2017 ##
## Comment aded after git update branch creation

# load env
. ~/.dshrc

if [[ -z $1 ]]
then
        echo -e "${CYAN}DSH Help - Use ${LIME}dsh -o ${GREEN}groups ${END}or ${LIME}dsh -g ${GREEN}groups ${CYAN}to see all configured and OS and System groups"
        echo -e ""
        echo -e "${LYELLOW}The hostlist is located at ${LIME}${HOSTLIST}${END}"
        echo -e ""
        echo -e "${LRED}Any groups displayed in this output are simply examples and could be outdated."
        echo -e ""
        echo -e "${LYELLOW}$0${END} -o ${LYELLOW}aix${END}|${LYELLOW}linux${END} -g ${LYELLOW}prod${END}|${LYELLOW}dev${END}|${LYELLOW}test${END} -c \"${LIME}command here${END}\"${END}"
        echo -e "${LCYAN}OR"
        echo -e "${LYELLOW}$0${END} -f ${LYELLOW}/path/to/host_list${END} -c \"${LIME}command here${END}\"${END}"
        echo -e ""
        exit 1
fi


while [[ "$#" -gt 0 ]]
do
case "$1" in
        -o) OS="$2"; shift 2;;
        -g) GROUP="$2"; shift 2;;
        -c) CMD="$2"; shift 2;;
        -d) DETAILS="true"; shift;;

        --os=*) os="{1#*=}"; shift 1;;
        --group=*) group="{1#*=}"; shift 1;;
        --command=*) command="{1#*=}"; shift 1;;
        --os|--group|--command|--details) echo "$1 requires an argument" >&2; exit 1;;

        -*) echo "unknown option: $1" >&2; exit 1;;
        *) die "$1"; shift 1 ;;
esac
done

if [[ $GROUP = "groups" ]]
then
awk '$4 !~ /,off,/ && $1 !~ /#/ {print $3,$4}' ${HOSTLIST} | sed 's!,!!' | sed 's!,! !g' | awk '{ for (i=1; i<=NF; i++) print $i }' | sort -u
fi

if [[ $OS = "groups" ]]
then
awk '$4 !~ /,off,/ && $1 !~ /#/ {print $3,$4}' ${HOSTLIST} | sed 's!,!!' | sed 's!,! !g' | awk '{ for (i=1; i<=NF; i++) print $i }' | sort -u
fi

if [[ -z $OS ]]
then
        NODELOOP=$(awk '$4 = /,'${GROUP}',/ && $4 !~ /,off,/ && $1 !~ /#/ {print $1}' ${HOSTLIST})
fi

if [[ -z $GROUP ]]
then
        NODELOOP=$(awk '$3 = /,'${OS}',/ && $4 !~ /,off,/ && $1 !~ /#/ {print $1}' ${HOSTLIST})
fi

if [[ -n $OS && -n $GROUP ]]
then
        NODELOOP=$(awk '$3 = /,'${OS}',/ && $4 = /,'${GROUP}',/ && $4 !~ /,off,/ && $1 !~ /#/ {print $1}' ${HOSTLIST})
fi

if [[ -n $DETAILS ]]
then
grep Owner ${HOSTLIST} | awk '{print $1, $2, $5}' | sed 's!#!!' | sed 's! !,!' | sed 's! !,!'
for NODES in $NODELOOP
do
        export ${NODES}
        grep -w ${NODES} ${HOSTLIST} | awk '{$3=$4="   ";gsub("   ", c); print $0}' | sed 's! !,!'
done
exit 1
fi

if [[ -z $CMD ]]
then
for NODES in $NODELOOP
do
        export ${NODES}
        echo -e "${NODES}"
done
echo -e "${LIME}# No command specified. Nodes in group listed instead. #${END}"
exit 1
fi

for NODES in $NODELOOP
do
export $NODES
if [[ $OS = "vio" ]]
then
        echo -e "$(/usr/bin/ssh  -o ConnectTimeout=3 padmin@$NODES $CMD)" "$(printf "%${COL}s" "$NODES")"
else
        echo -e "$(/usr/bin/ssh  -o ConnectTimeout=3 $NODES $CMD)" "$(printf "%${COL}s" "$NODES")"
fi
done 2>/dev/null
